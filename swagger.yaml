openapi: "3.1.0"

info:
  title: FinTrackr API
  description: Endpoints specifications and error conditions and messages for front-end organization
  version: "1.0.0"

servers:
  - url: http://localhost:3000

tags:
  - name: Iteration 0
    description: Standard authentication, data store and persistence 
  - name: Iteration 1
    description: Data entry state (Manual and SQL)
  - name: Iteration 2
    description: Data display state
  - name: Iteration 3
    description: GUI, session handler and deployment
  - name: Iteration 4
    description: Categorization suggestion state (NLP)
  - name: Iteration 5
    description: Financial advice state (LLM)

components:
  schemas:
    prim:
      Error:
        type: string
        example: "Specific error message here"
      Email:
        type: string
        example: "example@gmail.com"
      Password:
        type: string
        example: "Password123"
      NameFirst:
        type: string
        example: "John"
      NameLast:
        type: string
        example: "Doe"
      AmountPos:
        type: number
        format: float
        example: 100.00
      AmountNeg:
        type: number
        format: float
        example: -100.00
      UserId:
        type: number
        example: 123

    group:
      User:
        type: object
        properties:
          userId:
            type: number
            example: 123
          name:
            type: string
            example: "John Doe"
          email:
            type: string
            example: "example@gmail.com"
      Transaction:
        type: object
        properties:
          amount:
            type: number
            format: float
            example: 100.00
          name:
            type: string
            example: "Restaurant cheque"
          category:
            type: string
            enum: [FOOD, HOUSING, ENTERTAINMENT, TRANSPORT, OTHER]
            example: "FOOD"
          description:
            type: string
            example: "Ate at a restaurant"

    body:
      Register:
        type: object
        properties:
          email:
            $ref: '#/components/schemas/prim/Email'
          password:
            $ref: '#/components/schemas/prim/Password'
          nameFirst:
            $ref: '#/components/schemas/prim/NameFirst'
          nameLast:
            $ref: '#/components/schemas/prim/NameLast'

    return:
      UserId:
        type: object
        properties:
          token:
            $ref: '#/components/schemas/prim/UserId'
      Error:
        type: object
        properties:
          error:
            $ref: '#/components/schemas/prim/Error'

paths:
  /v1/auth/register:
    post:
      summary: Register a new user
      description: Takes in information about a new user and registers them in the system.
      tags:
        - Iteration 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body/Register'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/return/UserId'
        '400':
          description: |
            If any of the following are true:
            - Email address is used by another user
            - Email is not one as per Validator.isEmail
            - NameFirst contains characters other than lowercase, uppercase, spaces, hyphens, and apostrophes.
            - NameFirst is between 2 and 20 characters
            - NameLast contains characters other than lowercase, uppercase, spaces, hyphens, and apostrophes.
            - NameLast is between 2 and 20 characters
            - Password is less than 8 characters
            - Password doesn't contain at least one number and one letter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/return/Error'
